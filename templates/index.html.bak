<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>智能绿建评价系统</title>
    <script src="/static/js/iframe-resizer.js"></script>
    <!-- 先加载Alpine.js -->
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <!-- 加载loader.js -->
    <script src="{{ url_for('static', filename='js/loader.js') }}"></script>
    <!-- 加载气候区划查询工具 -->
    <script src="{{ url_for('static', filename='js/climate_zone.js') }}"></script>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/tailwind.min.css') }}">
    <link rel="icon" type="image/png" sizes="16x16" href="{{ url_for('static', filename='image/greenscore-sm.png') }}">
    <link rel="icon" type="image/png" sizes="32x32" href="{{ url_for('static', filename='image/greenscore-32.png') }}">
    <link rel="icon" type="image/png" sizes="48x48" href="{{ url_for('static', filename='image/greenscore.png') }}">
    <link rel="apple-touch-icon" sizes="180x180" href="{{ url_for('static', filename='image/greenscore-lg.png') }}">
    
    <!-- 绿色建材计算所需的外部库 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js" defer></script>
    <script src="/static/js/green_building_score_calculator.js"></script>
    <!-- 在 head 部分添加对 db_updater.js 的引用 -->
    <script src="/static/js/db_updater.js"></script>
     <!-- 使用Font Awesome图标库 -->
     <link href="{{ url_for('static', filename='css/all.min.css') }}" rel="stylesheet">
     <!-- 引入自定义样式表 -->
     <link href="{{ url_for('static', filename='css/index.css') }}" rel="stylesheet">
    
    <script>
    function filterTableByClause(query) {
        // 获取所有表格行
        const rows = document.querySelectorAll('table tbody tr');
        
        // 如果查询为空，显示所有行
        if (!query.trim()) {
            rows.forEach(row => row.style.display = '');
            return;
        }
        
        // 遍历每一行进行过滤
        rows.forEach(row => {
            // 获取条文号列的内容
            const clauseCell = row.querySelector('td:first-child');
            if (clauseCell) {
                const clauseText = clauseCell.textContent.toLowerCase();
                // 如果条文号包含查询文本，显示该行，否则隐藏
                if (clauseText.includes(query.toLowerCase())) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }
        });
    }
    </script>
    
    <!-- 添加climate_zone.js引用，放在页面头部的script标签之前 -->
    <script src="{{ url_for('static', filename='js/climate_zone.js') }}"></script>
    <script>
        // 页面变量
        // ... existing code ...
    </script>
    <!-- 引入Chart.js用于数据可视化 -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/static/js/green_building_score_calculator.js"></script>
    <!-- 在 head 部分添加对 db_updater.js 的引用 -->
    <script src="/static/js/db_updater.js"></script>
    <!-- 引入iframe-resizer.js用于iframe高度自适应 -->
    <script src="{{ url_for('static', filename='js/iframe-resizer.js') }}"></script>

    <!-- 添加score_summary.js引用，确保在所有使用它的代码之前 -->
    <script src="/static/js/score_summary.js"></script>
    
    <!-- 添加menu.js引用，确保在所有使用它的代码之前 -->
    <script src="/static/js/menu.js"></script>
    
    <script>
        // 在这里添加自定义的updateScoreSummaryTables函数，它会被scoreUtils.fetchScoreSummary调用
        // 更新评分汇总表格
        function updateScoreSummaryTables(data) {
            console.log('更新评分汇总表格:', data);
            
            // 如果数据为空或无效，显示提示并返回
            if (!data || typeof data !== 'object') {
                console.error('更新评分汇总表格失败: 无效的数据格式', data);
                alert('获取评分数据失败，请刷新页面重试');
                return;
            }
            
            // 显示最后更新时间
            const lastUpdateTimeElement = document.getElementById('lastUpdateTime');
            if (lastUpdateTimeElement && data.timestamp) {
                lastUpdateTimeElement.textContent = `最后更新时间: ${data.timestamp}`;
            }
            
            // 更新专业得分行
            const specialtyScoresRow = document.getElementById('specialty-scores-row');
            if (specialtyScoresRow && data.specialty_scores) {
                const specialtyScores = data.specialty_scores;
                
                // 获取项目评价标准
                const projectStandard = data.project_standard || document.getElementById('current-project-standard')?.value || '';
                
                // 显示或隐藏环境健康与节能专业列
                const envHealthEnergyHeader = document.getElementById('env_health_energy_header');
                const envHealthEnergyColumn = document.getElementById('env_health_energy_column');
                if (envHealthEnergyHeader) {
                    envHealthEnergyHeader.style.display = projectStandard === '四川省标' ? '' : 'none';
                    if (envHealthEnergyColumn) {
                        envHealthEnergyColumn.style.display = projectStandard === '四川省标' ? '' : 'none';
                    }
                }
                
                // 更新各专业得分
                updateCell(specialtyScoresRow, 1, specialtyScores['建筑专业'] || 0);
                updateCell(specialtyScoresRow, 2, specialtyScores['结构专业'] || 0);
                updateCell(specialtyScoresRow, 3, specialtyScores['给排水专业'] || 0);
                updateCell(specialtyScoresRow, 4, specialtyScores['电气专业'] || 0);
                updateCell(specialtyScoresRow, 5, specialtyScores['暖通专业'] || 0);
                updateCell(specialtyScoresRow, 6, specialtyScores['景观专业'] || 0);
                
                // 如果是四川省标，更新环境健康与节能专业得分
                if (projectStandard === '四川省标') {
                    updateCell(specialtyScoresRow, 7, specialtyScores['环境健康与节能专业'] || 0);
                }
                
                // 更新总分
                const totalScore = data.total_score || 0;
                const totalScoreCell = specialtyScoresRow.querySelector('.total-score');
                if (totalScoreCell) {
                    totalScoreCell.textContent = totalScore.toFixed(1);
                }
            }
            
            // 继续保留其余的updateScoreSummaryTables函数内容...
        }
    </script>

    <!-- 更新所有调用fetchScoreSummary的地方改为使用scoreUtils.fetchScoreSummary -->
    <script>
        // 在页面加载完成后获取评分汇总数据
        document.addEventListener('DOMContentLoaded', function() {
            // 使用score_summary.js提供的initializeScoreSummary函数
            if (typeof scoreUtils !== 'undefined' && scoreUtils.initializeScoreSummary) {
                // scoreUtils.initializeScoreSummary已经包含了所有初始化逻辑
                // 无需额外调用，因为score_summary.js中已有DOMContentLoaded事件监听器
            }
        });
        
        // 更新其他直接调用的地方
        // 例如，原来是:
        // fetchScoreSummary(true).catch(error => { ... });
        // 改为:
        // scoreUtils.fetchScoreSummary(true).catch(error => { ... });
    </script>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- 引入用户菜单组件 -->
    {% include 'components/user_menu.html' %}

    <!-- 隐藏字段，用于存储当前项目ID和标准 -->
    <input type="hidden" id="current-project-id" value="{{ project.id if project else '21' }}">
    <input type="hidden" id="current-project-standard" value="{{ project.standard if project else '成都市标' }}">
    
    <div class="page-container">
        <div class="flex min-h-screen">
            <!-- 侧边导航栏 -->
            <aside class="w-72 bg-white shadow-lg fixed h-screen overflow-y-auto z-10">
                <div class="p-6 border-b">
                    <h1 class="text-2xl font-bold text-primary flex items-center">                
                        <picture>
                            <source srcset="{{ url_for('static', filename='image/greenscore@3x.png') }}" media="(-webkit-min-device-pixel-ratio: 3), (min-resolution: 288dpi)">
                            <source srcset="{{ url_for('static', filename='image/greenscore@2x.png') }}" media="(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)">
                            <img src="{{ url_for('static', filename='image/greenscore.png') }}" alt="logo" class="inline-block h-8 w-8 mr-2">
                        </picture>
                        <span>智能绿建评价系统</span>
                    </h1>
                    </div>
                <nav class="p-4">
                    <div class="space-y-3">
                        <a href="{{ url_for('project_detail', project_id=project.id) }}" class="menu-item flex items-center p-4 text-gray-600 rounded-lg hover:bg-gray-50 {% if current_page == 'project_info' %}active{% endif %}">
                            <i class="ri-file-list-line mr-3"></i>
                            <span>项目信息</span>
                        </a>
                        <div class="menu-item flex items-center p-4 text-gray-600 rounded-lg hover:bg-gray-50" id="basicMenuToggle">
                            <i class="ri-checkbox-line mr-3"></i>
                            <span>基本级</span>
                            <i class="ri-arrow-down-s-line ml-auto"></i>
                        </div>
                        <div id="basicMenuContent" class="menu-content">
                            <a href="{{ url_for('filter_standards', level='基本级', specialty='建筑', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '基本级' and current_specialty == '建筑' %}active{% endif %}">
                                    <i class="ri-building-line mr-3"></i>
                                <span>建筑</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='基本级', specialty='结构', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '基本级' and current_specialty == '结构' %}active{% endif %}">
                                <i class="ri-layout-2-line mr-3"></i>
                                <span>结构</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='基本级', specialty='给排水', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '基本级' and current_specialty == '给排水' %}active{% endif %}">
                                <i class="ri-drop-line mr-3"></i>
                                <span>给排水</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='基本级', specialty='电气', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '基本级' and current_specialty == '电气' %}active{% endif %}">
                                <i class="ri-flashlight-line mr-3"></i>
                                <span>电气</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='基本级', specialty='暖通', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '基本级' and current_specialty == '暖通' %}active{% endif %}">
                                <i class="ri-temp-hot-line mr-3"></i>
                                <span>暖通</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='基本级', specialty='景观', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '基本级' and current_specialty == '景观' %}active{% endif %}">
                                <i class="ri-plant-line mr-3"></i>
                                <span>景观</span>
                            </a>
                            {% if project and project.standard == '四川省标' %}
                            <a href="{{ url_for('filter_standards', level='基本级', specialty='环境健康与节能', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '基本级' and current_specialty == '环境健康与节能' %}active{% endif %}">
                                    <i class="ri-leaf-line mr-3"></i>
                                    <span>环境健康与节能</span>
                                </a>
                                {% endif %}
                            </div>

                        {% if not project or project.star_rating_target != '基本级' %}
                        <div class="menu-item flex items-center p-4 text-gray-600 rounded-lg hover:bg-gray-50" id="advancedMenuToggle">
                            <i class="ri-checkbox-multiple-line mr-3"></i>
                            <span>提高级</span>
                            <i class="ri-arrow-down-s-line ml-auto"></i>
                        </div>
                        <div id="advancedMenuContent" class="menu-content">
                            <a href="{{ url_for('filter_standards', level='提高级', specialty='建筑', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '提高级' and current_specialty == '建筑' %}active{% endif %}">
                                <i class="ri-building-line mr-3"></i>
                                <span>建筑</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='提高级', specialty='结构', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '提高级' and current_specialty == '结构' %}active{% endif %}">
                                <i class="ri-layout-2-line mr-3"></i>
                                <span>结构</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='提高级', specialty='给排水', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '提高级' and current_specialty == '给排水' %}active{% endif %}">
                                    <i class="ri-drop-line mr-3"></i>
                                <span>给排水</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='提高级', specialty='电气', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '提高级' and current_specialty == '电气' %}active{% endif %}">
                                <i class="ri-flashlight-line mr-3"></i>
                                <span>电气</span>
                            </a>
                            <a href="{{ url_for('filter_standards', level='提高级', specialty='暖通', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '提高级' and current_specialty == '暖通' %}active{% endif %}">
                                <i class="ri-temp-hot-line mr-3"></i>
                                <span>暖通</span>
                            </a>
                            {% if project and project.standard == '成都市标' or project and project.standard == '四川省标' %}
                            <a href="{{ url_for('filter_standards', level='提高级', specialty='景观', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '提高级' and current_specialty == '景观' %}active{% endif %}">
                                    <i class="ri-plant-line mr-3"></i>
                                <span>景观</span>
                            </a>
                            {% endif %}
                            {% if project and project.standard == '四川省标' %}
                            <a href="{{ url_for('filter_standards', level='提高级', specialty='环境健康与节能', project_id=project.id if project else None) }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_level == '提高级' and current_specialty == '环境健康与节能' %}active{% endif %}">
                                <i class="ri-leaf-line mr-3"></i>
                                    <span>环境健康与节能</span>
                                </a>
                                {% endif %}
                            </div>
                        {% endif %}
                        
                        {% if not project or project.star_rating_target != '基本级' %}
                        <a href="{{ url_for('project_detail', project_id=project.id, page='score_summary') }}" 
                        class="menu-item flex items-center p-4 text-gray-600 rounded-lg hover:bg-gray-50 {% if current_page == 'score_summary' %}active{% endif %}"
                        id="scoreSummaryMenuItem">
                         <i class="ri-bar-chart-line mr-3"></i>
                         <span>评分汇总</span>
                        </a>
                        {% endif %}
                        
                        <div class="menu-item flex items-center p-4 text-gray-600 rounded-lg hover:bg-gray-50" id="reportMenuToggle">
                            <i class="ri-file-download-line mr-3"></i>
                            <span>报告导出</span>
                            <i class="ri-arrow-down-s-line ml-auto"></i>
                        </div>
                        <div id="reportMenuContent" class="menu-content">
                            <div class="submenu-group" id="reportSubmenu">
                                <a href="javascript:void(0)" onclick="generateWord()" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_page == 'report_table' %}active{% endif %}">
                                    <i class="ri-file-list-3-line mr-3"></i>
                                    <span>报审表</span>
                                </a>
                                <a href="javascript:void(0)" onclick="generateDWG()" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_page == 'dwg_export' %}active{% endif %}">
                                    <i class="ri-leaf-line mr-3"></i>
                                    <span>绿色建筑设计专篇</span>
                                </a>
                                {% if project and project.standard == '国标' %}
                                <a href="javascript:void(0)" onclick="generateSelfAssessmentReport(); return false;" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50">
                                    <i class="ri-book-line mr-3"></i>
                                    <span>绿建自评估报告</span>
                                </a>
                                {% endif %}
                            </div>
                        </div>
                        
                        <div class="menu-item flex items-center p-4 text-gray-600 rounded-lg hover:bg-gray-50" id="specialCalcMenuToggle">
                            <i class="ri-calculator-line mr-3"></i>
                            <span>专项计算</span>
                            <i class="ri-arrow-down-s-line ml-auto"></i>
                        </div>
                        <div id="specialCalcMenuContent" class="menu-content">
                            <div class="submenu-group" id="specialCalcSubmenu">
                                <a href="{{ url_for('project_detail', project_id=project.id, page='solar_calculator') }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_page == 'solar_calculator' %}active{% endif %}">
                                    <i class="ri-flashlight-line mr-3"></i>
                                    <span>太阳能计算</span>
                                </a>
                                <a href="{{ url_for('project_detail', project_id=project.id, page='green_materials') }}" class="submenu-item flex items-center px-4 py-3 text-gray-600 hover:bg-gray-50 {% if current_page == 'green_materials' %}active{% endif %}">
                                    <i class="ri-calculator-line mr-3"></i>
                                    <span>绿色建材应用比例</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </nav>
            </aside>

            <!-- 主内容区域 -->
            <main class="flex-1 overflow-y-auto p-8 bg-transparent main-content" style="min-height: 100vh;">
              
                <div class="max-w-7xl mx-auto px-4 py-8">
                    <!-- 添加项目管理按钮 -->

                    <div class="flex justify-between items-center mb-6">
                        <div class="flex items-center gap-4">
                            {% if current_page == 'score_summary' %}
                            <h2 class="text-2xl font-bold text-primary">评分汇总</h2>
                            {% elif current_page == 'project_info' %}
                            <h2 class="text-2xl font-bold text-primary">项目信息</h2>
                            {% elif current_page == 'report_table' %}
                            <h2 class="text-2xl font-bold text-primary">报审表</h2>
                            {% elif current_level %}
                            <div class="flex flex-col gap-2">
                                <h2 class="text-2xl font-bold text-primary">{{ current_specialty }}专业</h2>
                                <div class="text-sm text-gray-600">
                                    当前评价标准: {% if project and project.standard == '国标' %}
                                        绿色建筑评价标准 GB/T 50378-2019（2024版）
                                    {% elif project and project.standard == '四川省标' %}
                                        四川省民用绿色建筑设计施工图阶段审查技术要点（2024版）
                                    {% elif project and project.standard == '成都市标' %}
                                        成都市绿色建筑施工图设计与审查技术要点（2024版）
                                    {% else %}
                                        成都市绿色建筑施工图设计与审查技术要点（2024版）
                                    {% endif %}
                                </div>
                            </div>
                            {% else %}

                            {% endif %}
                        </div>
                        <div class="flex items-center gap-4">
                            {% if current_level in ['基本级', '提高级'] %}
                            <div class="relative" >
                                <input type="text" id="clause-filter" placeholder="输入条文号过滤..." class="px-4 py-2 pr-10 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary/50" oninput="filterTableByClause(this.value)">
                                <!-- <i class="ri-search-line text-gray-400 "></i> -->
                            </div>
                            {% endif %}
                            {% if current_page == 'project_info' %}
                            <a href="{{ url_for('project_management') }}" class="flex items-center px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors">
                                <i class="ri-arrow-left-line mr-2"></i>
                                <span>返回项目管理</span>
                            </a>
                            {% endif %}
                        </div>
                    </div>

                    <!-- 添加隐藏的项目名称字段，在所有页面都可用 -->
                    <input type="hidden" id="current_project_name" value="{{ project.name if project else '' }}">
                    <!-- 添加隐藏的项目ID字段，在所有页面都可用 -->
                    <input type="hidden" id="project_id" value="{{ project.id if project else '21' }}">

                    {% if current_page == 'score_summary' %}
                    <!-- 通过iframe引入评分汇总页面 -->
                    <iframe id="score-summary-iframe" src="{{ url_for('score_summary_page', project_id=project.id if project else '21') }}" frameborder="0" class="w-full" style="min-height: 1200px;"></iframe>
                    
                    <script>
                        document.addEventListener('DOMContentLoaded', function() {
                            const iframe = document.getElementById('score-summary-iframe');
                            
                            // 监听iframe中发送的消息
                            window.addEventListener('message', function(event) {
                                if (event.data && event.data.type === 'saveStarCase') {
                                    // 处理保存星级案例的请求
                                    saveStarCase();
                                } else if (event.data && event.data.type === 'iframeReady') {
                                    // iframe已准备就绪，如果有数据则立即发送
                                    console.log('iframe已准备就绪');
                                    if (scoreData) {
                                        console.log('iframe就绪后立即发送评分数据');
                                        updateIframeScores(scoreData);
                                    }
                                }
                            });
                            
                            // 保存星级案例的函数
                            function saveStarCase() {
                            const projectId = document.getElementById('project_id').value;
                                fetch('/api/save_star_case', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ project_id: projectId })
                                })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        showToast('保存成功', 'success');
                                    } else {
                                        showToast(data.message || '保存失败', 'error');
                                    }
                                })
                                .catch(error => {
                                    console.error('保存星级案例时出错:', error);
                                    showToast('保存失败，请重试', 'error');
                                });
                            }
                            
                            // 向iframe发送评分数据更新的消息
                            function updateIframeScores(data) {
                                iframe.contentWindow.postMessage({
                                    type: 'updateScores',
                                    data: data
                                }, '*');
                            }
                            
                            // 导出updateIframeScores方法，使其可以从外部调用
                            window.updateScoreSummary = updateIframeScores;
                            
                            // 预先获取评分数据
                            const projectId = document.getElementById('project_id').value;
                            let scoreData = null;
                            
                            // 立即开始获取评分数据
                            console.log('预先获取评分数据，项目ID:', projectId);
                            fetch(`/api/get_score_summary?project_id=${projectId}&force_refresh=true`)
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error(`获取评分数据失败: ${response.status} ${response.statusText}`);
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    console.log('预先获取评分数据成功');
                                    scoreData = data;
                                    
                                    // 如果iframe已加载完成，立即更新
                                    if (iframe.contentDocument && iframe.contentDocument.readyState === 'complete') {
                                        console.log('iframe已加载完成，立即更新数据');
                                        updateIframeScores(data);
                                    }
                                })
                                .catch(error => {
                                    console.error('预先获取评分数据失败:', error);
                                });
                            
                            // 监听iframe加载完成事件
                            iframe.addEventListener('load', function() {
                                console.log('评分汇总iframe加载完成');
                                
                                // 如果预先获取的数据已经就绪，直接使用
                                if (scoreData) {
                                    console.log('使用预先获取的评分数据更新iframe');
                                    updateIframeScores(scoreData);
                                    return;
                                }
                                
                                // 如果预先获取的数据还未就绪，重新获取
                                console.log('预先获取的数据未就绪，重新获取');
                                fetch(`/api/get_score_summary?project_id=${projectId}&force_refresh=true`)
                                    .then(response => {
                                        if (!response.ok) {
                                            throw new Error(`获取评分数据失败: ${response.status} ${response.statusText}`);
                                        }
                                        return response.json();
                                    })
                                    .then(data => {
                                        console.log('获取评分数据成功，更新iframe中的评分汇总表格');
                                        updateIframeScores(data);
                                    })
                                    .catch(error => {
                                        console.error('获取评分数据失败:', error);
                                    });
                            });
                        });
                    </script>
                    {% endif %}
                    {% block content %}
                    {% if current_page == 'project_info' %}
                    <!-- 项目信息表单 -->
                    <div class="project-info-container">
                        <!-- 使用iframe嵌入项目信息页面，并使用iframe-resizer.js管理高度 -->
                        <iframe id="projectInfoIframe" src="{{ url_for('project_info_page', project_id=project.id if project else '') }}" 
                            style="width:100%; border:none;" scrolling="no"
                            title="项目信息" loading="eager"></iframe>
                    </div>
                    {% elif current_page == 'green_materials' %}
                    <!-- 绿色建材计算器内容 -->
                    <div class="green-materials-container">
                        <!-- 使用iframe嵌入绿色建材计算器，并使用iframe-resizer.js管理高度 -->
                        <iframe id="myIframe" src="{{ url_for('calculator') }}" 
                            style="width:100%; border:none; min-height:800px;" scrolling="auto"
                            title="绿色建材比例计算" loading="eager"></iframe>
                    </div>
                    <script>
                    // 初始化iframe自适应高度
                    document.addEventListener('DOMContentLoaded', function() {
                        if (typeof iFrameResize === 'function') {
                            iFrameResize({
                                log: false,
                                heightCalculationMethod: 'max',
                                checkOrigin: false,
                                scrolling: true,
                                resizeFrom: 'child',
                                autoResize: true,
                                minHeight: 800
                            }, '#myIframe');
                            console.log('绿色建材iframe高度自适应已初始化');
                        } else {
                            console.error('iframe-resizer.js 未正确加载');
                        }
                    });
                    </script>
                    <!-- 移除旧的iframe调整脚本，使用iframe-resizer.js替代 -->
                    {% elif current_page == 'solar_calculator' %}
                    <!-- 太阳能计算器内容 -->
                    <div class="solar-calculator-container">
                        <!-- 使用iframe嵌入太阳能计算器，并使用iframe-resizer.js管理高度 -->
                        <iframe id="solarIframe" src="{{ url_for('solar_calculator', project_id=project.id if project else '') }}" 
                            style="width:100%; border:none;" scrolling="no"
                            title="太阳能计算" loading="eager"></iframe>
                    </div>
                    <!-- 移除旧的iframe调整脚本，使用iframe-resizer.js替代 -->
                    <script>
                        // 初始化太阳能计算器iframe自适应高度
                        document.addEventListener('DOMContentLoaded', function() {
                            if (typeof iFrameResize === 'function') {
                                iFrameResize({
                                    log: false,
                                    heightCalculationMethod: 'bodyOffset',
                                    autoResize: true,
                                    maxHeight: 50000,
                                    scrolling: false,
                                    checkOrigin: false,
                                    resizeFrom: 'child',
                                    inPageLinks: true,
                                    sizeHeight: true,
                                    sizeWidth: false
                                }, '#solarIframe');
                                console.log('太阳能计算器iframe高度自适应已初始化');
                            } else {
                                console.error('太阳能计算器iframe: iframe-resizer.js 未正确加载');
                            }
                        });
                    </script>
                    {% elif current_page == 'specialty' %}
                    <!-- 标准列表内容 -->
                    <!-- 添加隐藏的项目ID字段 -->
                    <input type="hidden" id="project_id" name="project_id" value="{{ project.id if project else '' }}">
                    
                    <div class="overflow-x-auto ">
                        {% if standards %}
                        
                        {% if current_level == '提高级' %}
                        <!-- 提高级分类过滤器 -->
                        <div class="mb-4 p-4 bg-gray-50 rounded-lg shadow-sm">
                            <div class="flex flex-wrap items-center">
                                <span class="mr-2 font-medium">分类过滤:</span>
                                <div class="flex flex-wrap gap-2">
                                    <button id="filter-all" class="px-3 py-1 rounded-full bg-gray-200 hover:bg-gray-300 text-gray-700 text-sm font-medium category-filter active">全部</button>
                                    <button id="filter-安全耐久" data-category="安全耐久" class="px-3 py-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-800 text-sm font-medium category-filter">安全耐久</button>
                                    <button id="filter-健康舒适" data-category="健康舒适" class="px-3 py-1 rounded-full bg-green-100 hover:bg-green-200 text-green-800 text-sm font-medium category-filter">健康舒适</button>
                                    <button id="filter-生活便利" data-category="生活便利" class="px-3 py-1 rounded-full bg-yellow-100 hover:bg-yellow-200 text-yellow-800 text-sm font-medium category-filter">生活便利</button>
                                    <button id="filter-资源节约" data-category="资源节约" class="px-3 py-1 rounded-full bg-green-100 hover:bg-green-200 text-green-800 text-sm font-medium category-filter">资源节约</button>
                                    <button id="filter-环境宜居" data-category="环境宜居" class="px-3 py-1 rounded-full bg-indigo-100 hover:bg-indigo-200 text-indigo-800 text-sm font-medium category-filter">环境宜居</button>
                                    <button id="filter-提高与创新" data-category="提高与创新" class="px-3 py-1 rounded-full bg-purple-100 hover:bg-purple-200 text-purple-800 text-sm font-medium category-filter">提高与创新</button>
                                </div>
                            </div>
                        </div>
                        {% endif %}
                        
                        <table class="min-w-full divide-y divide-gray-200 table-fixed">
                            <thead class="bg-primary">
                                <tr>
                                    {% if current_level == '基本级' %}
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-5">条文号</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-30">条文内容</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-5">分值</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-10">是否达标</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap technical-measures-cell">技术措施</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-10">审查材料</th>
                                    {% elif current_level == '提高级' %}
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-5">条文号</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-5">分类</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-30">条文内容</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-5">分值</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-10">得分</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap technical-measures-cell">技术措施</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap w-10">审查材料</th>
                                    {% else %}
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap">条文号</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap">分类</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap">条文内容</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap">分值</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xl font-medium text-white tracking-wider whitespace-nowrap">审查材料</th>
                                    {% endif %}
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                {% for standard in standards %}
                                <tr class="table-row-hover">
                                    <td class="px-6 py-4 whitespace-nowrap text-base text-gray-700">{{ standard.条文号 }}</td>
                                    {% if current_level == '提高级' %}
                                    <td class="px-6 py-4 whitespace-normal h-16 text-base text-gray-700">
                                        <span class="category-tag category-{{ standard.分类 }}">{{ standard.分类 }}</span>
                                    </td>
                                    {% endif %}
                                    <td class="px-6 py-4 text-base text-gray-700">{{ standard.条文内容 }}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-base text-gray-700">{{ standard.分值 }}</td>
                                    
                                    {% if current_level == '基本级' %}
                                    <td class="px-6 py-4 whitespace-nowrap text-base text-gray-700">
                                        <select name="is_achieved" data-clause="{{ standard.条文号 }}" class="w-full rounded focus:border-primary is-achieved-select" title="符合性判断">
                                            <option value="是">是</option>
                                            <option value="否">否</option>
                                            <option value="不参评">不参评</option>
                                        </select>
                                    </td>
                                    <td class="px-6 py-4 text-base text-gray-700">
                                        <textarea name="technical_measures" data-clause="{{ standard.条文号 }}" class="w-full rounded focus:border-primary technical-measures" placeholder="请输入技术措施"></textarea>
                                    </td>
                                    <td class="px-6 py-4 text-base text-gray-700">{{ standard.审查材料 }}</td>
                                    {% elif current_level == '提高级' %}
                                    <td class="px-6 py-4 whitespace-nowrap text-base text-gray-700">
                                        {% if standard.分值 == '—' %}
                                        <span class="text-gray-500">—</span>
                                        {% else %}
                                        <input type="text" name="score" data-clause="{{ standard.条文号 }}" data-maxscore="{{ standard.分值 }}" class="w-full rounded focus:border-primary" placeholder="得分">
                                        {% endif %}
                                    </td>
                                    <td class="px-6 py-4 text-base text-gray-700 technical-measures-cell">
                                        <textarea name="technical_measures" data-clause="{{ standard.条文号 }}" class="w-full rounded focus:border-primary technical-measures" placeholder="请输入技术措施"></textarea>
                                    </td>
                                    <td class="px-6 py-4 text-base text-gray-700">{{ standard.审查材料 }}</td>
                                    {% else %}
                                    <td class="px-6 py-4 text-base text-gray-700">{{ standard.审查材料 }}</td>
                                    {% endif %}
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>

                        <!-- 添加保存按钮 -->
                        <div class="mt-8 flex justify-center">
                            <button type="button" id="saveScoreBtn" class="px-6 py-3 bg-primary text-white rounded-lg shadow-md hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
                                保存评分信息
                            </button>
                        </div>

                        <!-- 评分统计表格 -->
                        {% if current_level == '提高级' %}

                        {% endif %}
                        {% else %}
                        <div class="text-center py-10">
                            <p class="text-gray-500 text-xl">没有找到符合条件的记录</p>
                            <p class="text-gray-400 text-lg mt-2">请尝试其他筛选条件</p>
                        </div>
                        {% endif %}
                    {% endif %}
                    {% endblock %}
                </div>
            </main>
        </div>
    </div>

    <!-- 添加悬浮保存按钮，仅在基本级和提高级页面显示 -->
    {% if current_level == '基本级' or current_level == '提高级' %}
    <div class="floating-save-btn" id="floatingSaveBtn">
        <i class="ri-save-line"></i>
    </div>
    {% endif %}

    <script>
    // 获取DOM元素
    const basicMenuToggle = document.getElementById('basicMenuToggle');
    const basicMenuContent = document.getElementById('basicMenuContent');
    const advancedMenuToggle = document.getElementById('advancedMenuToggle');
    const advancedMenuContent = advancedMenuToggle ? document.getElementById('advancedMenuContent') : null;
    const reportMenuToggle = document.getElementById('reportMenuToggle');
    const reportMenuContent = document.getElementById('reportMenuContent');
    const specialCalcMenuToggle = document.getElementById('specialCalcMenuToggle');
    const specialCalcMenuContent = document.getElementById('specialCalcMenuContent');
    const loadStarCaseBtn = document.getElementById('loadStarCaseBtn');
    const saveStarCaseBtn = document.getElementById('saveStarCaseBtn');

    // 添加防抖函数
    function debounce(func, wait) {
        let timeout;
        return function(...args) {
            const context = this;
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(context, args), wait);
        };
    }
    
    // 为保存星级案例按钮添加点击事件
    if (saveStarCaseBtn) {
        saveStarCaseBtn.addEventListener('click', async function() {
            try {
                // 获取项目ID
                const projectId = document.getElementById('project_id').value;
                                if (!projectId) {
                    alert('未找到项目ID');
                                    return;
                                }
                                
                                // 显示加载状态
                const originalText = this.textContent;
                this.textContent = '保存中...';
                this.disabled = true;

                // 调用API保存星级案例数据
                const response = await fetch(`/api/save_star_case?project_id=${projectId}`, {
                    method: 'POST'
                });
                const data = await response.json();

                if (data.success) {
                    alert(data.message);
                } else {
                    alert(data.message || '保存星级案例失败');
                }
            } catch (error) {
                console.error('保存星级案例失败:', error);
                alert('保存星级案例失败，请重试');
            } finally {
                // 恢复按钮状态
                this.textContent = '保存星级案例';
                this.disabled = false;
            }
        });
    }

    // 防止页面跳动的函数
    function preventPageJump() {
        // 记录当前滚动位置
        const scrollPosition = window.scrollY;
        
        // 在下一个事件循环中恢复滚动位置
        setTimeout(() => {
            window.scrollTo(0, scrollPosition);
        }, 0);
    }
    
    // 添加菜单切换事件
    basicMenuToggle.addEventListener('click', function() {
        basicMenuContent.classList.toggle('expanded');
        const arrow = this.querySelector('.ri-arrow-down-s-line');
        if (arrow) {
            arrow.style.transform = basicMenuContent.classList.contains('expanded') ? 'rotate(180deg)' : 'rotate(0deg)';
        }
    });
    
    if (advancedMenuToggle) {
        advancedMenuToggle.addEventListener('click', function() {
            advancedMenuContent.classList.toggle('expanded');
            const arrow = this.querySelector('.ri-arrow-down-s-line');
            if (arrow) {
                arrow.style.transform = advancedMenuContent.classList.contains('expanded') ? 'rotate(180deg)' : 'rotate(0deg)';
            }
        });
    }
    
    reportMenuToggle.addEventListener('click', function() {
        reportMenuContent.classList.toggle('expanded');
        const arrow = this.querySelector('.ri-arrow-down-s-line');
        if (arrow) {
            arrow.style.transform = reportMenuContent.classList.contains('expanded') ? 'rotate(180deg)' : 'rotate(0deg)';
        }
    });
    
    
    // 项目ID缓存
    let cachedProjectId = null;
    
    // 在页面加载完成后处理菜单展开/折叠等事件
    document.addEventListener('DOMContentLoaded', function() {
        // 评分汇总相关代码保留
        if (window.location.href.includes('page=score_summary')) {
            console.log('当前是评分汇总页面');
        }
        
        // 获取评分汇总菜单项
        const scoreSummaryMenuItem = document.querySelector('a[data-content="score-summary"]');
        if (scoreSummaryMenuItem) {
            console.log('找到评分汇总菜单项，添加点击事件');
            
            // 添加点击事件，确保点击时先计算评分
            scoreSummaryMenuItem.addEventListener('click', function(e) {
                // 不阻止默认行为，让导航正常工作
            });
        }
        
        // 为当前页面设置data属性，以便menu.js可以使用它们判断当前页面
        document.body.setAttribute('data-level', "{{ current_level }}");
        document.body.setAttribute('data-page', "{{ current_page }}");
        document.body.setAttribute('data-specialty', "{{ current_specialty }}");
    });

    </script>
    

    <!-- 在适当的JS部分添加生成自评估报告的函数 -->
    <script>

    // 绿建自评估报告生成函数
    function generateSelfAssessmentReport() {
        // 获取项目评价标准
        const currentProjectStandard = document.getElementById('current-project-standard')?.value || '国标';
        const currentMenuItems = document.querySelectorAll('.submenu-item.active');
        
        // 只有国标项目才能生成绿建自评估报告
        if (currentProjectStandard !== '国标') {
            alert('只有国标项目才能生成绿建自评估报告！');
            return;
        }
        
        // 移除其他菜单项的激活状态
        currentMenuItems.forEach(item => {
            item.classList.remove('active');
        });
        
        // 找到绿建自评估报告菜单项并添加active类
        const reportMenuItem = document.querySelector('a[onclick="generateSelfAssessmentReport(); return false;"]');
        let progressInterval;
        
        if (reportMenuItem) {
            reportMenuItem.classList.add('active');
            reportMenuItem.classList.add('loading');
            
            // 创建进度条动画
            let progress = 0;
            progressInterval = setInterval(() => {
                progress += 2;
                if (progress > 90) {
                    clearInterval(progressInterval);
                }
                reportMenuItem.style.backgroundImage = `linear-gradient(to right, rgba(79, 209, 197, 0.3) ${progress}%, transparent ${progress}%)`;
            }, 100);
        }
        
        // 显示加载指示器
        const pageLoader = document.getElementById('page-loader');
        if (pageLoader) {
            pageLoader.style.display = 'flex';
        }

        // 获取当前项目ID
        const projectId = document.getElementById('project_id').value;
        console.log("项目ID:", projectId);
        
        if (!projectId) {
            alert('未找到项目ID');
            if (pageLoader) {
                pageLoader.style.display = 'none';
            }
            if (reportMenuItem) {
                reportMenuItem.classList.remove('loading');
                reportMenuItem.style.backgroundImage = '';
                clearInterval(progressInterval);
            }
            return;
        }

        console.log("正在生成绿建自评估报告，项目ID: " + projectId);

        // 发送请求
        fetch('/api/self-assessment-report', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                project_id: projectId
            })
        })
        .then(response => {
            console.log("收到服务器响应状态:", response.status);
            
            if (!response.ok) {
                // 如果服务器返回错误，尝试获取错误信息
                return response.json().then(data => {
                    console.error("服务器返回错误:", data);
                    throw new Error(data.error || '生成绿建自评估报告失败');
                });
            }
            return response.blob();
        })
        .then(blob => {
            console.log("收到blob数据，类型:", blob.type, "大小:", blob.size, "bytes");
            
            // 创建下载链接
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            const projectName = document.getElementById('current_project_name').value || '';
            console.log("项目名称:", projectName);
            
            a.href = url;
            a.download = projectName ? `${projectName}_绿建自评估报告.docx` : '绿建自评估报告.docx';
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            
            // 隐藏加载指示器
            if (pageLoader) {
                pageLoader.style.display = 'none';
            }
            
            // 完成进度条
            if (reportMenuItem) {
                clearInterval(progressInterval);
                reportMenuItem.style.backgroundImage = `linear-gradient(to right, rgba(79, 209, 197, 0.3) 100%, transparent 100%)`;
                setTimeout(() => {
                    reportMenuItem.classList.remove('loading');
                    reportMenuItem.style.backgroundImage = '';
                }, 500);
            }
        })
        .catch(error => {
            console.error('生成报告失败:', error);
            alert(error.message || '生成绿建自评估报告失败，请稍后重试');
            
            // 隐藏加载指示器
            if (pageLoader) {
                pageLoader.style.display = 'none';
            }
            
            // 重置进度条
            if (reportMenuItem) {
                clearInterval(progressInterval);
                reportMenuItem.classList.remove('loading');
                reportMenuItem.style.backgroundImage = '';
            }
        });
    }
    </script>

    <script>
        // 通用模态窗口函数
        // 加载中模态窗口
        function showLoadingModal(message = '处理中，请稍候...') {
            // 检查是否已存在加载模态窗口
            let loadingModal = document.getElementById('loadingModal');
            
            // 如果不存在，创建一个
            if (!loadingModal) {
                loadingModal = document.createElement('div');
                loadingModal.id = 'loadingModal';
                loadingModal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
                loadingModal.innerHTML = `
                    <div class="bg-white rounded-lg shadow-xl p-6 max-w-sm w-full text-center">
                        <div class="animate-spin mb-4 mx-auto">
                            <i class="ri-loader-4-line text-4xl text-primary"></i>
                        </div>
                        <p id="loadingMessage" class="text-gray-700"></p>
                    </div>
                `;
                document.body.appendChild(loadingModal);
            }
            
            // 设置消息并显示
            const messageElement = loadingModal.querySelector('#loadingMessage');
            if (messageElement) {
                messageElement.textContent = message;
            }
            
            loadingModal.classList.remove('hidden');
            document.body.style.overflow = 'hidden'; // 防止背景滚动
        }
        
        // 隐藏加载中模态窗口
        function hideLoadingModal() {
            const loadingModal = document.getElementById('loadingModal');
            if (loadingModal) {
                loadingModal.classList.add('hidden');
                document.body.style.overflow = ''; // 恢复背景滚动
            }
        }
        
        // 显示错误模态窗口
        function showErrorModal(message, title = '出错了') {
            // 隐藏加载窗口
            hideLoadingModal();
            
            // 检查是否已存在错误模态窗口
            let errorModal = document.getElementById('errorModal');
            
            // 如果不存在，创建一个
            if (!errorModal) {
                errorModal = document.createElement('div');
                errorModal.id = 'errorModal';
                errorModal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
                errorModal.innerHTML = `
                    <div class="bg-white rounded-lg shadow-xl p-6 max-w-md w-full">
                        <div class="flex justify-between items-center mb-4">
                            <h3 id="errorTitle" class="text-xl font-bold text-red-600"></h3>
                            <button class="text-gray-500 hover:text-gray-700" onclick="closeErrorModal()" aria-label="关闭">
                                <i class="ri-close-line text-xl"></i>
                            </button>
                        </div>
                        <div class="mb-6">
                            <p id="errorMessage" class="text-gray-700"></p>
                        </div>
                        <div class="flex justify-end">
                            <button onclick="closeErrorModal()" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700">
                                我知道了
                            </button>
                        </div>
                    </div>
                `;
                document.body.appendChild(errorModal);
            }
            
            // 设置标题和消息并显示
            const titleElement = errorModal.querySelector('#errorTitle');
            const messageElement = errorModal.querySelector('#errorMessage');
            
            if (titleElement) {
                titleElement.textContent = title;
            }
            
            if (messageElement) {
                messageElement.textContent = message;
            }
            
            errorModal.classList.remove('hidden');
            document.body.style.overflow = 'hidden'; // 防止背景滚动
        }
        
        // 关闭错误模态窗口
        function closeErrorModal() {
            const errorModal = document.getElementById('errorModal');
            if (errorModal) {
                errorModal.classList.add('hidden');
                document.body.style.overflow = ''; // 恢复背景滚动
            }
        }
        
        // 显示成功模态窗口
        function showSuccessModal(message, title = '操作成功') {
            // 隐藏加载窗口
            hideLoadingModal();
            
            // 检查是否已存在成功模态窗口
            let successModal = document.getElementById('successModal');
            
            // 如果不存在，创建一个
            if (!successModal) {
                successModal = document.createElement('div');
                successModal.id = 'successModal';
                successModal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
                successModal.innerHTML = `
                    <div class="bg-white rounded-lg shadow-xl p-6 max-w-md w-full">
                        <div class="flex justify-between items-center mb-4">
                            <h3 id="successTitle" class="text-xl font-bold text-green-600"></h3>
                            <button class="text-gray-500 hover:text-gray-700" onclick="closeSuccessModal()" aria-label="关闭">
                                <i class="ri-close-line text-xl"></i>
                            </button>
                        </div>
                        <div class="mb-6">
                            <p id="successMessage" class="text-gray-700"></p>
                        </div>
                        <div class="flex justify-end">
                            <button onclick="closeSuccessModal()" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700">
                                确定
                            </button>
                        </div>
                    </div>
                `;
                document.body.appendChild(successModal);
            }
            
            // 设置标题和消息并显示
            const titleElement = successModal.querySelector('#successTitle');
            const messageElement = successModal.querySelector('#successMessage');
            
            if (titleElement) {
                titleElement.textContent = title;
            }
            
            if (messageElement) {
                messageElement.textContent = message;
            }
            
            successModal.classList.remove('hidden');
            document.body.style.overflow = 'hidden'; // 防止背景滚动
        }
        
        // 关闭成功模态窗口
        function closeSuccessModal() {
            const successModal = document.getElementById('successModal');
            if (successModal) {
                successModal.classList.add('hidden');
                document.body.style.overflow = ''; // 恢复背景滚动
            }
        }
        
        // 点击模态窗口外部关闭
        document.addEventListener('click', function(e) {
            const errorModal = document.getElementById('errorModal');
            const successModal = document.getElementById('successModal');
            
            if (errorModal && !errorModal.querySelector('.bg-white').contains(e.target) && !errorModal.classList.contains('hidden')) {
                closeErrorModal();
            }
            
            if (successModal && !successModal.querySelector('.bg-white').contains(e.target) && !successModal.classList.contains('hidden')) {
                closeSuccessModal();
            }
        });
    </script>

    <!-- 评分汇总按钮的JS代码 -->
    <script>
        // 获取当前选中的项目ID
        function getSelectedProjectId() {
            // 先尝试从隐藏字段获取
            let projectId = document.getElementById('current-project-id')?.value;
            if (!projectId) {
                // 尝试从project_id字段获取
                projectId = document.getElementById('project_id')?.value;
            }
            if (!projectId) {
                // 尝试从URL参数获取
                const urlParams = new URLSearchParams(window.location.search);
                projectId = urlParams.get('project_id');
            }
            return projectId;
        }
        
        /**
         * 更新项目评分表的函数
         * 注意：此函数不再自动调用，因为后端get_score_summary已集成更新项目表的功能
         * 保留此函数以便需要时手动触发项目评分更新
         */
        async function updateProjectScores(projectId, scoreData) {
            try {
                console.log('更新项目表中的评分数据:', projectId, scoreData);
                
                // 调用更新项目评分的API
                const response = await fetch('/api/update_project_scores', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        project_id: projectId,
                        scores: scoreData
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    console.log('成功更新项目评分:', result);
                    return true;
                } else {
                    console.error('更新项目评分失败:', result.message);
                    return false;
                }
            } catch (error) {
                console.error('更新项目评分时出错:', error);
                return false;
            }
        }
        
        // 简单的提示函数
        function showToast(message, type = 'info') {
            // 如果有现成的Toast系统可以使用
            if (typeof toast !== 'undefined') {
                toast(message, type);
                return;
            }
            
            // 否则使用简单的alert
            alert(message);
        }
        
        // 在页面加载完成后，添加评分菜单点击事件
        document.addEventListener('DOMContentLoaded', function() {
            // 如果当前是评分汇总页面，不再自动加载评分数据
            if (window.location.href.includes('page=score_summary')) {
                console.log('当前是评分汇总页面');
            }
            
            // 获取评分汇总菜单项
            const scoreSummaryMenuItem = document.querySelector('a[data-content="score-summary"]');
            if (scoreSummaryMenuItem) {
                console.log('找到评分汇总菜单项，添加点击事件');
                
                // 添加点击事件，确保点击时先计算评分
                scoreSummaryMenuItem.addEventListener('click', function(e) {
                    // 不阻止默认行为，让导航正常工作
                });
            }
        });
    </script>

    <!-- 评分汇总面板 -->
    <div id="score-summary" class="content-panel" style="display: none;">
        <h3>评分汇总</h3>
        <div class="alert alert-info">
            <p id="current-standard-info">当前评价标准: 加载中...</p>
        </div>
        <div id="score-summary-container">
            <!-- 评分汇总内容将通过JavaScript加载 -->
            <div class="text-center p-5">
                <p>请选择项目并点击"评分汇总"菜单查看评分结果</p>
            </div>
        </div>
    </div>

    <script>
        // ... existing code ...

        // 为提高级得分输入框添加验证
        document.addEventListener('DOMContentLoaded', function() {
            // 如果当前是提高级页面，添加输入验证
            if ('{{ current_level }}' === '提高级') {
                // 获取所有得分输入框
                const scoreInputs = document.querySelectorAll('input[name="score"]');
                
                // 为每个输入框添加事件监听
                scoreInputs.forEach(input => {
                    input.addEventListener('input', function(e) {
                        // 获取输入值
                        const scoreValue = parseFloat(this.value);
                        
                        // 如果不是数字，不做处理
                        if (isNaN(scoreValue)) {
                            return;
                        }
                        
                        // 获取最大分值
                        const maxScore = parseFloat(this.getAttribute('data-maxscore'));
                        
                        // 验证输入值不大于最大分值
                        if (scoreValue > maxScore) {
                            // 提示用户
                            alert(`输入的分数不能大于该条文的分值(${maxScore})`);
                            // 重置为最大分值
                            this.value = maxScore;
                        }
                        
                        // 确保不为负数
                        if (scoreValue < 0) {
                            this.value = 0;
                        }
                    });
                    
                    // 添加失焦事件，确保在用户完成输入后格式化值
                    input.addEventListener('blur', function() {
                        // 如果值为空或不是数字，设为0
                        if (this.value === '' || isNaN(parseFloat(this.value))) {
                            this.value = '0';
                        }
                    });
                });
            }
        });
        
        // ... existing code ...
    </script>
    {% if current_level == '提高级' %}
    <!-- 添加悬浮徽章组件 -->
    {% include 'components/floating_badge.html' %}
    {% endif %}
    <script>
    // 添加徽章相关的JavaScript函数已移至组件文件中
    
    // 在页面加载和得分变化时更新徽章
    document.addEventListener('DOMContentLoaded', function() {
        if ('{{ current_level }}' === '提高级') {
            updateCategoryBadges();
            initializeBadgeFilters();
        }
    });
    </script>

    <style>
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
    </style>

    <!-- 页面加载后执行的函数 -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // 恢复保存的滚动位置
            const savedScrollPosition = sessionStorage.getItem('scrollPosition');
            if (savedScrollPosition) {
                window.scrollTo(0, parseInt(savedScrollPosition));
                sessionStorage.removeItem('scrollPosition');
            }
            
            // 检查是否保存成功
            const saveSuccess = sessionStorage.getItem('save_success');
            if (saveSuccess === 'true') {
                // 如果保存成功，清除临时数据
                sessionStorage.removeItem('saved_green_area');
                sessionStorage.removeItem('save_success');
                console.log('保存成功，已清除临时数据');
            } else {
                // 检查并恢复临时保存的绿地面积数据
                const savedGreenArea = sessionStorage.getItem('saved_green_area');
                if (savedGreenArea) {
                    const greenAreaInput = document.getElementById('green_area');
                    if (greenAreaInput && (!greenAreaInput.value || greenAreaInput.value === '0.00')) {
                        console.log('从临时存储恢复绿地面积:', savedGreenArea);
                        greenAreaInput.value = savedGreenArea;
                    }
                }
            }
            
            // ... 其他现有代码
        });
    </script>
</body>
</html>